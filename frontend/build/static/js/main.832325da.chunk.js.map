{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/cartReducers.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","logo.png","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","cart","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod","productList","products","loading","page","pages","error","productDetails","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfle","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","Header","useSelector","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","src","logo","alt","Toggle","Collapse","Nav","className","style","maxHeight","navbarScroll","Link","color","NavDropdown","title","name","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","value","text","Product","Card","_id","Img","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","keyword","split","Pagination","Array","keys","active","listProducts","listProductDetails","HomeScreen","history","location","search","useEffect","sm","md","lg","xl","ProductScreen","match","useState","qty","setQty","setRating","setComment","successProductReview","params","Image","fluid","ListGroup","description","countInStock","xs","Form","Control","onChange","e","target","Button","disabled","push","addToCart","setItem","stringify","CartScreen","productId","Number","removeFromCartHandler","removeFromCart","length","rounded","m","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setpassword","redirect","onSubmit","preventDefault","post","username","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCrate","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","User","href","isDeliver","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","createdProduct","successCreate","loadingCreate","errorCreate","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","header","updateProduct","File","custom","OrderListScreen","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.832325da.chunk.js","sourcesContent":["/* CONSTANTS USED IN HomeScreen COMPONENT */\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\n\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\n\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\n/* CONSTANTS USED IN ProductScreen COMPONENT */\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\n\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\n\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\n/* CONSTANTS USED IN ProductListScreen COMPONENT */\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\n\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\n\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\n/* CONSTANTS USED IN ProductListScreen COMPONENT */\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\n\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\n\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\n\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\n/* CONSTANTS USED IN ProductEditScreen COMPONENT */\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\n\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\n\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\n\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\n/* CONSTANTS USED IN ProductScreen COMPONENT */\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\n\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\n\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\n\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\n/* CONSTANTS USED IN ProductCarousel COMPONENT */\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\n\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\n\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","/* ACTION TYPES USED IN CartScreen COMPONENT */\n\n// ADD ITEMS TO CART\nexport const CART_ADD_ITEM = \"CART_ADD_ITEM\";\n\n// REMOVE ITEMS FROM CART\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\n\n/* ACTION TYPES USED IN ShippingScreen COMPONENT */\n\n// SAVE SHIPPING ADDRESS\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\n\n// SAVE SHIPPING ADDRESS\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\n\n// DELETE CART INFO IN LOCAL STORAGE AFTER ORDER PLACED\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\n","/* ACTION TYPES */\n\n// LOGIN\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\n\n// LOGOUT\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\n// REGISTER\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\n// USER DETAILS\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\n// UPDATE USER DETAILS\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\n\n// USER LIST\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\n// USER DELETE\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\n// USER EDIT\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n","/* ACTION TYPES */\n\n// PLACE ORDER\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\n\n// RESET STATE\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\n\n// ORDER DETAILS\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\n\n// PAYMENT\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\n// LIST OF ORDERS OF A USER\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\n\n// LIST OF ALL ORDERS OF ALL USERS\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\n// DELIVERY STATUS OF ORDERS\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","/* REDUX */\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n/* IMPORTING REDUCERS */\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\n\nimport { cartReducer } from \"./reducers/cartReducers\";\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from \"./reducers/orderReducers\";\n\n/* COMBINED REDUCER */\nconst reducer = combineReducers({\n  cart: cartReducer,\n\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfle: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\n/* PULLING DATA OUT OF LOCAL STORAGE AND LOAD IT INTO INITIAL STATE */\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\n/* INITIAL STATE */\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n};\n\nconst middleware = [thunk];\n\n/* REDUX STORE */\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","/* ACTION TYPES */\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from \"../constants/cartConstants\";\n\n/* REDUCER USED IN CartScreen & ShippingScreen COMPONENT */\nexport const cartReducer = (\n  state = {\n    cartItems: [],\n    shippingAddress: {},\n  },\n  action\n) => {\n  switch (action.type) {\n    // IF ITEM DOESN'T EXIST IN CART WE ADD IT, IF IT ALREADY EXISTS THEN WE UPDATE IT'S QUANTITY\n\n    /* CartScreen COMPONENT */\n\n    case CART_ADD_ITEM: {\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    }\n\n    case CART_REMOVE_ITEM: {\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n    }\n\n    /* ShippingScreen COMPONENT */\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n\n    /* PaymentScreen COMPONENT */\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n\n    /* PlaceOrderScreen COMPONENT */\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      };\n\n    default:\n      return state;\n  }\n};\n","/* ACTION TYPES */\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n} from \"../constants/productConstants\";\n\n/* REDUCER USED IN HomeScreen COMPONENT */\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return {\n        loading: true,\n        products: [],\n      };\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        page: action.payload.page,\n        pages: action.payload.pages,\n      };\n\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN ProductScreen COMPONENT */\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        loading: true,\n        ...state,\n      };\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload,\n      };\n\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN ProductListScreen COMPONENT */\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case PRODUCT_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case PRODUCT_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN ProductListScreen COMPONENT */\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case PRODUCT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload,\n      };\n\n    case PRODUCT_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case PRODUCT_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN ProductEditScreen COMPONENT */\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case PRODUCT_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload,\n      };\n\n    case PRODUCT_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN ProductScreen COMPONENT */\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN ProductCarousel COMPONENT */\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return {\n        loading: true,\n        products: [],\n      };\n\n    case PRODUCT_TOP_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload,\n      };\n\n    case PRODUCT_TOP_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","/* ACTION TYPES */\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_FAIL,\n  USER_DELETE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from \"../constants/userConstants\";\n\n/* REDUCER USED IN USER LOGIN IN LoginScreen COMPONENT */\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n      };\n\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case USER_LOGOUT:\n      return {}; /* CLEARS STATE */\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN USER REGISTRATION IN RegisterScreen COMPONENT */\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n      };\n\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case USER_LOGOUT:\n      return {}; /* CLEARS STATE */\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN GETTING USER DETAILS IN ProfileScreen COMPONENT */\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case USER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload,\n      };\n\n    case USER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case USER_DETAILS_RESET:\n      return {\n        user: {},\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN UPDATING USER DETAILS IN ProfileScreen COMPONENT */\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        user: action.payload,\n      };\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case USER_UPDATE_PROFILE_RESET:\n      return {}; /* RESET STATE */\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED TO GET LIST OF USERS IN UserList SCREEN */\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case USER_LIST_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n      };\n\n    case USER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case USER_LIST_RESET:\n      return { users: [] };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED TO DELETE A USER FROM UserList SCREEN */\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case USER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED TO EDIT A USER IN UserEdit SCREEN */\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      };\n\n    default:\n      return state;\n  }\n};\n","/* ACTION TYPES */\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_RESET,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\n/* REDUCER USED IN PlaceOrder COMPONENT */\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN PlaceOrder COMPONENT TO STORE ORDER DETAILS */\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN OrderScreen COMPONENT TO MAKE PAYMENT */\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_PAY_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED TO GET DATA OF ALL THE ORDERS PLACED BY USER IN ProfileScreen COMPONENT */\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    // WHEN USER LOGS OUT WE WANT ALL DATA REGARDING ORDERS TO BE RESET AS WELL\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED TO GET DATA OF ALL THE ORDERS PLACED BY ALL USERS IN OrderListScreen COMPONENT */\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* REDUCER USED IN OrderScreen COMPONENT TO MAKE STATUS OF DELIVERY */\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_DELIVER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","/* AXIOS */\nimport axios from \"axios\";\n\n/* ACTION TYPES */\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_FAIL,\n  USER_DELETE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\n\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\n/* ACTION CREATOR USED IN USER LOGIN IN LoginScreen COMPONENT & HEADER */\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    /* MAKE POST REQUEST TO GET BACK THE USER TOKEN */\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n\n    /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    /* SETTING VALUE OF USER INFO IN LOCAL STORAGE SO WE KNOW USER IS LOGGED IN */\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN USER LOGOUT IN LoginScreen COMPONENT & HEADER */\nexport const logout = () => (dispatch) => {\n  /* REMOVE USER INFO FORM LOCAL STORAGE */\n  localStorage.removeItem(\"userInfo\");\n\n  /* DISPATCH TO REMOVE USER INFO FORM STORE */\n  dispatch({\n    type: USER_LOGOUT,\n  });\n  dispatch({\n    type: USER_DETAILS_RESET,\n  });\n  /* DISPATCH TO RESET THE DETAILS OF ORDERS MADE BY USER */\n  dispatch({\n    type: ORDER_LIST_MY_RESET,\n  });\n  /* DISPATCH TO RESET THE DETAILS OF USERS LIST */\n  dispatch({\n    type: USER_LIST_RESET,\n  });\n};\n\n/* ACTION CREATOR USED IN USER REGISTRATION IN RegisterScreen COMPONENT & HEADER */\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    /* MAKE POST REQUEST TO GET BACK THE USER TOKEN */\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/register/\",\n      { name: name, email: email, password: password },\n      config\n    );\n\n    /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    /* AFTER REGISTRATION WE WANT TO IMMEDIATELY LOGIN THE USER */\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    /* SETTING VALUE OF USER INFO IN LOCAL STORAGE SO WE KNOW USER IS LOGGED IN */\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN GETTING USER DETAILS IN ProfileScreen COMPONENT  */\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    /* MAKE GET REQUEST TO GET BACK THE USER DATA */\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IN AUTHORISED HE'LL HAVE FULL ACCESS TO HIS PROFILE INFORMATION */,\n      },\n    };\n\n    // USING ${id} BECAUSE WHILE ACCESSING NORMAL USER WE'LL PASS STRING 'profile' BUT WHILE ACCESSING ADMIN PANEL WE'LL PASS THE 'id' SO LINK HAS TO BE DYNAMIC\n    const { data } = await axios.get(`/api/users/${id}/`, config);\n\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN UPDATING USER DETAILS IN ProfileScreen COMPONENT  */\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    /* MAKE PUT REQUEST TO SET THE THE USER DATA */\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IN AUTHORISED HE'LL HAVE FULL ACCESS TO HIS PROFILE INFORMATION */,\n      },\n    };\n\n    // USING ${id} BECAUSE WHILE ACCESSING NORMAL USER WE'LL PASS STRING 'profile' BUT WHILE ACCESSING ADMIN PANEL WE'LL PASS THE 'id' SO LINK HAS TO BE DYNAMIC\n    const { data } = await axios.put(`/api/users/profile/update`, user, config);\n\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    /* AFTER UPDATING PROFILE INFORMATION WE WANT TO LOG THE USER IN WITH THE UPDATED INFO */\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    /* SETTING UPDATED VALUE OF USER INFO IN LOCAL STORAGE */\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED TO GET THE LIST OF USERS IN UserList SCREEN  */\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    /* MAKE GET REQUEST TO SET THE THE USERS LIST */\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IS ADMIN WE'LL BE ABLE TO SEE LIST OF USERS */,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED TO DELETE A USER IN UserList SCREEN */\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    /* MAKE DELETE REQUEST TO DELETE THE USER */\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IS ADMIN WE'LL BE ABLE TO DELETE THE USER */,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/delete/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED TO EDIT A USER IN UserUpdate SCREEN */\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    /* MAKE PUT REQUEST TO EDIT THE USER */\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IS ADMIN WE'LL BE ABLE TO EDIT THE USER */,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/update/${user._id}/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    /* AFTER UPDATING WE WANT TO RELOAD THE USER DATA */\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import React, { useState } from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Button, Form } from \"react-bootstrap\";\n\n/* REACT ROUTER DOM */\nimport { useHistory } from \"react-router-dom\";\n\nfunction SearchBox() {\n  /* STATE */\n  const [keyword, setKeyword] = useState(\"\");\n\n  let history =\n    useHistory(); /* CAN'T DIRECTLY USE HISTORY AS IT'S NOT AN ACTUAL PAGE SO CAN'T DESTRUCTURE PROPS */\n\n  /* HANDLER */\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    // WHEN USER HITS SUBMIT, REDIRECT TO HOME PAGE TO SEE PRODUCTS AND APPEND ?keyword=...IN URL\n    if (keyword) {\n      history.push(`/?keyword=${keyword}&page=1`);\n    } else {\n      // IF WE HIT SUBMIT WITHOUT KEYWORD, WE DON'T WANT THE USER TO GET REDIRECTED IN THAT CASE RATHER STAY ON WHATEVER PAGE HE WAS\n      history.push(history.push(history.location.pathname));\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} className=\"d-flex\">\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        className=\"mr-sm-2 ml-sm-5\"\n      ></Form.Control>\n\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2 mx-sm-2\">\n        Search\n      </Button>\n    </Form>\n  );\n}\n\nexport default SearchBox;\n","export default __webpack_public_path__ + \"static/media/logo.46e3f4dd.png\";","import React from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { logout } from \"../actions/userActions\";\n\n/* COMPONENTS */\nimport SearchBox from \"./SearchBox\";\n\nimport logo from \"../logo.png\";\n\nfunction Header() {\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userLogin;\n\n  /* HANDLER */\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"black\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <img src={logo} alt=\"pickl&pluap\" />\n            </Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\n\n          <Navbar.Collapse id=\"navbarScroll\">\n            {/* <SearchBox /> */}\n\n            <Nav\n              className=\"ms-auto my-2 my-lg-0\"\n              style={{ maxHeight: \"100px\" }}\n              navbarScroll\n            >\n              <LinkContainer to=\"/cart\">\n                <Nav.Link style={{ color: \"#FFF\" }}>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\n/* REACT-BOOTSTRAP */\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Rating({ value, text, color }) {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>{text ? text : \"\"}</span>\n    </div>\n  );\n}\n\nexport default Rating;\n","import React from \"react\";\n\n/* REACT-BOOTSTRAP */\nimport { Card } from \"react-bootstrap\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* COMPONENTS */\nimport Rating from \"./Rating\";\n\nfunction Product({ product }) {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n            color={\"#f8e825\"}\n          />\n        </Card.Text>\n\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Product;\n","/* REACT BOOTSTRAP */\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default function Loader() {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        height: \"100px\",\n        width: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    >\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  );\n}\n","/* REACT BOOTSTRAP */\nimport { Alert } from \"react-bootstrap\";\n\nexport default function Message({ variant, children }) {\n  return <Alert variant={variant}>{children}</Alert>;\n}\n","import React from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Pagination } from \"react-bootstrap\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction Paginate({ page, pages, keyword = \"\", isAdmin = false }) {\n  /* isAdmin IS SET TO FALSE BY DEFAULT, ONLY IN ADMIN ProductList PAGE IS WILL BE SET TO TRUE */\n\n  if (keyword) {\n    keyword = keyword.split(\"?keyword=\")[1].split(\"&\")[0];\n  }\n\n  /* \n  console.log(\"KEYWORD\", keyword);\n  output: ?keyword=iPhone&page=1 => iPhone&page=1 => iPhone\n  */\n\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? `/?keyword=${keyword}&page=${x + 1}`\n                : `/admin/productlist//?keyword=${keyword}&page=${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n}\n\nexport default Paginate;\n","/* AXIOS */\nimport axios from \"axios\";\n\n/* ACTION TYPES */\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n} from \"../constants/productConstants\";\n\n/* ACTION CREATOR USED IN HomeScreen COMPONENT */\nexport const listProducts =\n  (keyword = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST,\n      });\n\n      const { data } = await axios.get(`/api/products${keyword}`);\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\n/* ACTION CREATOR USED IN ProductScreen COMPONENT */\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN DELETING PRODUCTS IN ProductListScreen COMPONENT */\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO DELETE PRODUCT */\n    // eslint-disable-next-line\n    const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\n\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN CREATING PRODUCTS IN ProductListScreen COMPONENT */\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO CREATE PRODUCT */\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\n\n    /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN UPDATING PRODUCTS IN ProductEditScreen COMPONENT */\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO UPDATE PRODUCT */\n    const { data } = await axios.put(\n      `/api/products/update/${product._id}/`,\n      product,\n      config\n    );\n\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    /* LOAD IN THE UPDATED PRODUCTS DETAILS */\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN CREATING PRODUCT REVIEWS IN ProductScreen COMPONENT */\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      });\n\n      // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      /* MAKING API CALL TO CREATE PRODUCT REVIEW */\n      const { data } = await axios.post(\n        `/api/products/${productId}/reviews/`,\n        review,\n        config\n      );\n\n      /* IF POST REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n\n/* ACTION CREATOR USED IN ProductCarousel COMPONENT */\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/products/top/`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\n\n/* REACT-BOOTSTRAP */\nimport { Row, Col } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { listProducts } from \"../actions/productActions\";\n\nfunction HomeScreen({ history }) {\n  const dispatch = useDispatch();\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const productList = useSelector((state) => state.productList);\n  const { products, page, pages, loading, error } = productList;\n\n  /* FIRING OFF THE ACTION CREATORS USING DISPATCH */\n\n  let keyword =\n    history.location\n      .search; /* IF USER SEARCHES FOR ANYTHING THEN THIS KEYWORD CHANGES AND USE EFFECT GETS TRIGGERED */\n\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n  }, [dispatch, keyword]);\n\n  return (\n    <div>\n      {/* {!keyword && <ProductCarousel />} */}\n\n      <h1>Latest Products</h1>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            {products.map((product) => {\n              return (\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                  <Product product={product} />\n                </Col>\n              );\n            })}\n          </Row>\n\n          <Paginate page={page} pages={pages} keyword={keyword} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","import React, { useEffect, useState } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n} from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\n\n/* ACTION TYPES */\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nfunction ProductScreen({ match, history }) {\n  /* STATE */\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const productDetails = useSelector((state) => state.productDetails);\n  const { product, loading, error } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProdcutReview,\n  } = productReviewCreate;\n\n  /* FIRING OFF THE ACTION CREATORS USING DISPATCH */\n\n  useEffect(() => {\n    // IF REVIEW SUCCESSFULLY SUBMITTED, RESET\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  /* HANDLERS */\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(createProductReview(match.params.id, { rating, comment }));\n  };\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                    color={\"#f8e825\"}\n                  />\n                </ListGroup.Item>\n\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col xs=\"auto\" className=\"my-1\">\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      className=\"w-100\"\n                      disabled={product.countInStock === 0}\n                      type=\"button\"\n                      onClick={addToCartHandler}\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          {/* <Row>\n            <Col md={6}>\n              <h4 className=\"mt-3\">Reviews</h4>\n\n              {product.reviews.length === 0 && (\n                <Message variant=\"info\">No Reviews</Message>\n              )}\n\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n\n                    <Rating value={review.rating} color=\"f8e825\" />\n\n                    <p>{review.createdAt.substring(0, 10)}</p>\n\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item>\n                  <h4>Write a Review</h4>\n\n                  {loadingProductReview && <Loader />}\n                  {successProductReview && (\n                    <Message variant=\"success\">Review Submitted</Message>\n                  )}\n                  {errorProdcutReview && (\n                    <Message variant=\"danger\">{errorProdcutReview}</Message>\n                  )}\n\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Review</Form.Label>\n\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"5\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        />\n                      </Form.Group>\n\n                      <Button\n                        disabled={loadingProductReview}\n                        type=\"submit\"\n                        variant=\"primary\"\n                        className=\"my-3\"\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"info\">\n                      Please <Link to=\"/login\">Login</Link> to write a review.\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row> */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductScreen;\n","/* AXIOS */\nimport axios from \"axios\";\n\n/* ACTION TYPES */\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\n/* ACTION CREATOR USED IN CartScreen COMPONENT */\n\n/* FOR ADDING PRODUCTS TO CART */\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  // FETCHING PRODUCT DATA\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n/* FOR REMOVING PRODUCTS FROM CART */\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  // SETTING VALUE OF CART ITEMS IN LOCAL STORAGE\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n/* ACTION CREATOR USED IN ShippingScreen COMPONENT */\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  // SETTING VALUE OF ADDRESS IN LOCAL STORAGE\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\n/* ACTION CREATOR USED IN PaymentScreen COMPONENT */\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  // SETTING VALUE OF PAYMENT METHOD IN LOCAL STORAGE\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import React, { useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n} from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nfunction CartScreen({ match, location, history }) {\n  /* GETTING DATA FROM URL IF PRESENT */\n  const productId = match.params.id;\n\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  //qty: '?qty=3' -> ['?qty',3] -> 3\n\n  /* FIRING OFF DISPATCH, BUT ONLY IF WE HAVE A PRODUCT ID & QUANTITY */\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  /* HANDLERS */\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message variant=\"info\">\n            Your cart is empty. <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n\n                  <Col m={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n\n                  <Col>${item.price}</Col>\n\n                  <Col md={3}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n\n                  <Col md={1}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n          </ListGroup>\n\n          <ListGroup.Item>\n            <Button\n              type=\"button\"\n              className=\"w-100\"\n              disabled={cartItems.length === 0}\n              onClick={checkoutHandler}\n            >\n              Proceed To Checkout\n            </Button>\n          </ListGroup.Item>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CartScreen;\n","import React from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Container } from \"react-bootstrap\";\n\nfunction FormContainer({ children }) {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { login } from \"../actions/userActions\";\n\nfunction LoginScreen({ location, history }) {\n  /* STATE */\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  /* SETTING UP REDIRECT */\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo, loading, error } = userLogin;\n\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR LOGIN */\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setpassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer ?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { register } from \"../actions/userActions\";\n\nfunction RegisterScreen({ location, history }) {\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  /* SETTING UP REDIRECT */\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userRegister = useSelector((state) => state.userRegister);\n\n  const { userInfo, loading, error } = userRegister;\n\n  /* REDIRECTING AN ALREADY LOGGED IN USER, AS WE DON'T WANT THEM TO SEE THE LOGIN PAGE */\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      /* FIRING OFF THE ACTION CREATORS USING DISPATCH FOR REGISTER */\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Register</h1>\n\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setpassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConfirm\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account ?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Sign In\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\n\nimport { listMyOrders } from \"../actions/orderActions\";\n\n/* ACTION TYPES */\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nfunction ProfileScreen({ history }) {\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userDetails = useSelector((state) => state.userDetails);\n\n  const { user, loading, error } = userDetails;\n\n  /* WE NEED TO MAKE SURE USER IS LOGGED IN SO PULLING OUT USER LOGIN INFO */\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userLogin;\n\n  /* PULLING OUT SUCCESS FROM userUpdateProfile, IF SUCCESS IS TRUE WE WILL RESET STATE */\n  const userUpdateProfle = useSelector((state) => state.userUpdateProfle);\n\n  const { success } = userUpdateProfle;\n\n  /* PULLING OUT USER ORDER DETAILS TO DISPLAY ON THE PAGE */\n  const orderListMy = useSelector((state) => state.orderListMy);\n\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  /* SENDING USER TO LOGIN PAGE IF NOT LOGGED IN & SHOW PROFILE DATA IF LOGGED IN */\n  useEffect(() => {\n    // USER IS NOT LOGGED IN\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      // WE DON'T HAVE THE USER INFO SO WE DISPATCH AN ACTION TO GET THE DATA\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        /* (userInfo._id !== user._id) BECAUSE DURING USER EDIT STATE CHANGES SO WE WANT TO FIRE DISPATCH AGAIN HERE IF THE DATA ISN'T SAME AS THE USER AS WE ARE LOGGED IN  */\n        // RESETTING PROFILE BEFORE FETCHING DATA SO THAT WE ALWAYS HAVE UPDATED DATA\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n\n        // FETCHING USER DATA\n        dispatch(getUserDetails(\"profile\"));\n\n        // FETCHING USER ORDER DETAILS\n        dispatch(listMyOrders());\n      } else {\n        // WE HAVE THE USER INFO SO WE SET OUR STATE\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      );\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setpassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n\n      <Col md={9}>\n        <h2>My Orders</h2>\n\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Delivered</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>\n                    {order.createdAt ? order.createdAt.substring(0, 10) : null}\n                  </td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt ? (\n                        order.paidAt.substring(0, 10)\n                      ) : null\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfileScreen;\n","/* AXIOS */\nimport axios from \"axios\";\n\n/* ACTION TYPES */\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from \"../constants/orderConstants\";\n\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\n\n/* ACTION CREATOR USED IN CREATING ORDER IN PlaceOrderScreen COMPONENT  */\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS, WE NEED TO BE LOGGED IN TO PLACE ORDER\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}` /* PASSING IN USER TOKEN AND IF THE USER IN AUTHORISED HE'LL HAVE FULL ACCESS TO HIS PROFILE INFORMATION */,\n      },\n    };\n\n    /* MAKING API CALL TO SAVE THE ORDER DETAILS */\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\n\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n\n    // REST CART INFO STORED IN STATE & LOCAL STORAGE AFTER ORDER PLACED\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    });\n\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN CREATING ORDER IN PlaceOrderScreen COMPONENT  */\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO GET THE ORDER DETAILS */\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\n\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN MAKING PAYMENT IN OrderScreen COMPONENT  */\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO SAVE THE PAYMENT DETAILS */\n    const { data } = await axios.put(\n      `/api/orders/${id}/pay/`,\n      paymentResult,\n      config\n    );\n\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN FETCHING USERS ORDERS IN ProfileScreen COMPONENT */\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO GET THE DETAILS OF THE ORDERS MADE BY THE USER */\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\n\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN FETCHING ALL USERS ORDERS IN OrderListScreen COMPONENT */\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO GET THE DETAILS OF ALL THE ORDERS MADE BY THE ALL THE USERS */\n    const { data } = await axios.get(`/api/orders/`, config);\n\n    /* IF GET REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\n/* ACTION CREATOR USED IN MARKING DELIVERY STATUS OF ORDERS IN OrderScreen COMPONENT  */\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    // PULLING OUT THE CURRENT USER WE ARE LOGGED IN AS\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    /* MAKING API CALL TO UPDATE ORDER DELIVERY STATUS */\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver/`,\n      {},\n      config\n    );\n\n    /* IF PUT REQUEST SUCCESSFULL WE DISPATCH & SEND THE PAYLOAD TO OUR REDUCER */\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Nav } from \"react-bootstrap\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Login</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Login</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { saveShippingAddress } from \"../actions/cartActions\";\n\nfunction ShippingScreen({ history }) {\n  // PULLING OUT SHIPPING ADDRESS FROM CART\n  const cart = useSelector((state) => state.cart);\n\n  const { shippingAddress } = cart;\n\n  // STATE\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  // HANDLERS\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* FIRING OFF THE ACTION CREATORS USING DISPATCH TO SAVE ADDRESS */\n    dispatch(\n      saveShippingAddress({\n        address,\n        city,\n        postalCode,\n        country,\n      })\n    );\n\n    // PUSHING USER TO PAYMENTS PAGE AFTER SAVING ADDRESS\n    history.push(\"./payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address ? address : \"\"}\n            onChange={(e) => setAddress(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city ? city : \"\"}\n            onChange={(e) => setCity(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode ? postalCode : \"\"}\n            onChange={(e) => setPostalCode(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country ? country : \"\"}\n            onChange={(e) => setCountry(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button className=\"my-3\" type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default ShippingScreen;\n","import React, { useState } from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Button, Form, Col } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen({ history }) {\n  // PULLING OUT SHIPPING ADDRESS FROM CART\n  const cart = useSelector((state) => state.cart);\n\n  const { shippingAddress } = cart;\n\n  // STATE\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  /* IF NO SHIPPING ADDRESS THEN REDIRECT TO ShippingAddress SCREEN */\n  if (!shippingAddress.address) {\n    history.push(\"./shipping\");\n  }\n\n  // HANDLERS\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(savePaymentMethod(paymentMethod));\n\n    // AFTER CHOSING THE PAYMENT METHOD REDIRECT USER TO PlaceOrder SCREEN\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"paypal\"\n              name=\"paymentMethod\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"my-3\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default PaymentScreen;\n\n","import React, { useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport Message from \"../components/Message\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { createOrder } from \"../actions/orderActions\";\n\n/* ACTION TYPES */\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\n\nfunction PlaceOrderScreen({ history }) {\n  const dispatch = useDispatch();\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const orderCrate = useSelector((state) => state.orderCreate);\n\n  const { order, error, success } = orderCrate;\n\n  const cart = useSelector((state) => state.cart);\n\n  // PRICE CALCULATIONS, WE ARE SETTING AN ATTRIBUTE TO OUR CART OBJECT BUT IT WON'T UPDATE OUR STATE, IT'S JUST FOR THIS PAGE\n  cart.itemsPrice = cart.cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  // REDIRECT\n  if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n\n  /* IF ORDER SUCCESSFULL AND WE HAVE ORDER ID, SEND USER TO USERS ACCOUNT TO VIEW THE ORDER */\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n\n      // RESET STATE\n      dispatch({\n        type: ORDER_CREATE_RESET,\n      });\n    }\n    // eslint-disable-next-line\n  }, [success, history]);\n\n  // HANDLERS\n  const placeorder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n\n              <p>\n                <strong>Shipping Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                {cart.shippingAddress.postalCode},{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment</h2>\n\n              <p>\n                <strong>Payment Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"w-100\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeorder}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\n\n/* PAYPAL BUTTONS */\nimport { PayPalButton } from \"react-paypal-button-v2\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\n\n/* ACTION TYPES */\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nfunction OrderScreen({ history, match }) {\n  const orderId = match.params.id;\n\n  const dispatch = useDispatch();\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // ITEMS PRICE GETS CALCULATED ONLY IF WE HAVE AN ORDER\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n\n  // PAYPAL BUTTONS\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=AV1X64z_qKbKnxy2y22WuHZlTnLYjgKMb6Vvfvprm6rsPDCJFMrGARNTzWAlBXyjKS-pX4wB4i6TMxmA\";\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    // IS USER IS NOT LOGGED IN THEN REDIRECT TO LOGIN PAGE\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    // CHECK IF WE HAVE THE ORDER DETAILS, IF NOT DISPATCH AN ACTION TO GET THE ORDER DETAILS\n    if (\n      !order ||\n      successPay ||\n      order._id !== Number(orderId) ||\n      successDeliver\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n\n      dispatch({ type: ORDER_DELIVER_RESET });\n\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      // ACTIVATING PAYPAL SCRIPTS\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo]);\n\n  /* HANDLERS */\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h1>Order: {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n\n              <p>\n                <strong>Name: {order.User.name}</strong>\n              </p>\n\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.User.email}`}>{order.User.email}</a>\n              </p>\n\n              <p>\n                <strong>Shipping Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n\n              {order.isDeliver ? (\n                <Message variant=\"success\">\n                  Delivered on{\" \"}\n                  {order.deliveredAt\n                    ? order.deliveredAt.substring(0, 10)\n                    : null}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment</h2>\n\n              <p>\n                <strong>Payment Method: </strong>\n                {order.paymentMethod}\n              </p>\n\n              {order.isPaid ? (\n                <Message variant=\"success\">\n                  Paid on {order.paidAt ? order.paidAt.substring(0, 10) : null}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\">Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n\n            {loadingDeliver && <Loader />}\n\n            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDeliver && (\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn w-100\"\n                  onClick={deliverHandler}\n                >\n                  Mark As Delivered\n                </Button>\n              </ListGroup.Item>\n            )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default OrderScreen;\n","import React, { useEffect } from \"react\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n/* REACT BOOTSTRAP */\nimport { Table, Button } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nfunction UserListScreen({ history }) {\n  const dispatch = useDispatch();\n\n  /* PULLING OUT STATE */\n  const userList = useSelector((state) => state.userList);\n  const { users, loading, error } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // WE NEED THE SUCCESS VALUE SO WHEN WE SUCCESSFULLY DELETE THE USER WE WANT THE NEW DATA\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    // WE DON'T WANT NON ADMINS TO ACCESS THIS PAGE SO REDIRECT IF SOMEBODY TRIES TO\n\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  /* HANDLER */\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this user ?\"))\n      dispatch(deleteUser(id));\n  };\n\n  return (\n    <div>\n      <h1>Users</h1>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from \"react\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\n\n/* ACTION TYPES */\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nfunction UserEditScreen({ match, history }) {\n  /* GETTING USER ID FROM URL */\n  const userId = match.params.id;\n\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user, loading, error } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    /* IF USER SUCCESSFULLY UPDATED, RESET USER DETAILS & REDIRECT USER TO ADMIN PAGE */\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      /* IF WE DON'T HAVE A USER, OR IF WE HAVE DATA LOADED IN BUT WE ARE EDITING SOME OTHER USER THEN WE DISPATCH AND GET DATA OF THAT USER */\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, user, userId, history, successUpdate]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\n  };\n\n  return (\n    <div>\n      <Link to=\"/admin/userlist\">Go Back</Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"isAdmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              />\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default UserEditScreen;\n","import React, { useEffect } from \"react\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n/* REACT BOOTSTRAP */\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport Paginate from \"../components/Paginate\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\n\n/* ACTION TYPES */\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductListScreen({ match, history }) {\n  const dispatch = useDispatch();\n\n  /* PULLING OUT STATE */\n  const productList = useSelector((state) => state.productList);\n  const { products, pages, page, loading, error } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    success: successDelete,\n    loading: loadingDelete,\n    error: errorDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    product: createdProduct,\n    success: successCreate,\n    loading: loadingCreate,\n    error: errorCreate,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  // GETTING PAGE NUMBER (KEYWORD IS PAGE NUMBER)\n  let keyword = history.location.search;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    // WE DON'T WANT NON ADMINS TO ACCESS THIS PAGE SO REDIRECT IF SOMEBODY TRIES TO\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    // CHECK IF PRODUCT CREATED, IF YES THEN REDIRECT TO EDIT PAGE\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(keyword));\n    }\n\n    // AFTER CREATING PRODUCT, LOAD IN PRODUCTS AGAIN, ADD successCreate IN DEPENDENCIES\n    // AFTER DELETING PRODUCT, LOAD IN PRODUCTS AGAIN, ADD successDelete IN DEPENDENCIES\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    keyword,\n  ]);\n\n  /* HANDLER */\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this product ?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProcutHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-end\">\n          <Button className=\"my-3\" onClick={createProcutHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\n\n/* AXIOS */\nimport axios from \"axios\";\n\n/* REACT ROUTER */\nimport { Link } from \"react-router-dom\";\n\n/* REACT BOOTSTRAP */\nimport { Button, Form } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\n\n/* ACTION TYPES */\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductEditScreen({ match, history }) {\n  /* GETTING USER ID FROM URL */\n  const productId = match.params.id;\n\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const productDetails = useSelector((state) => state.productDetails);\n  const { product, loading, error } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    success: successUpdate,\n    loading: loadingUpdate,\n    error: errorUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    // CHECK IF PRODUCT WAS UDPATED\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    // DISPATCH TO UDPATE PRODUCT\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"product_id\", productId);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        header: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/products/upload/\",\n        formData,\n        config\n      );\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Link to=\"/admin/productlist\">Go Back</Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              />\n\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              />\n\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"countinstock\">\n              <Form.Label>Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter Description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default ProductEditScreen;\n","import React, { useEffect } from \"react\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n/* REACT BOOTSTRAP */\nimport { Table, Button } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { listOrders } from \"../actions/orderActions\";\n\nfunction OrderListScreen({ history }) {\n  const dispatch = useDispatch();\n\n  /* PULLING OUT STATE */\n  const orderList = useSelector((state) => state.orderList);\n  const { orders, loading, error } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    // WE DON'T WANT NON ADMINS TO ACCESS THIS PAGE SO REDIRECT IF SOMEBODY TRIES TO\n\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  /* HANDLER */\n\n  return (\n    <div>\n      <h1>Orders</h1>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.User && order.User.name}</td>\n                <td>{order.createdAt && order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice}</td>\n\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {order.isDeliver ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"dark\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n}\n\nexport default OrderListScreen;\n","/* REACT BOOTSTRAP */\nimport { Container } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\n/* REACT ROUTER */\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <main className=\"py-3\">\n          <Route exact path=\"/\" component={HomeScreen} />\n\n          <Route path=\"/login\" component={LoginScreen} />\n\n          <Route path=\"/register\" component={RegisterScreen} />\n\n          <Route path=\"/profile\" component={ProfileScreen} />\n\n          <Route path=\"/shipping\" component={ShippingScreen} />\n\n          <Route path=\"/payment\" component={PaymentScreen} />\n\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n\n          <Route path=\"/order/:id\" component={OrderScreen} />\n\n          <Route path=\"/product/:id\" component={ProductScreen} />\n\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\n\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n        </main>\n      </Container>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n/* REDUX */\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n/* COMPONENTS */\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n/* STYLING */\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}